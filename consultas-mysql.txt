/*consultas a sakila
Obtener todos los actores de nombre ‘NICK’.*/

SELECT *
FROM actor
WHERE actor.first_name LIKE'NICK'

/*Obtener una lista con todos los distritos distintos (district en address).*/

SELECT DISTINCT district
FROM address

/*Obtener las películas sobre agentes secretos (description contiene ‘Secret Agent’).*/

SELECT *
FROM film
WHERE film.description LIKE '%Secret Agent%'

/*Mostrar la lista de las películas mas caras (coste por minuto)*/

SELECT film_id, title, 	'length', 'rental_rate',   (film.rental_rate/film.length) coste_por_minuto
FROM film
ORDER BY coste_por_minuto DESC

/*Obtener los códigos y medias de gasto de los clientes que han gastado mas de 100 en menos de 25 operaciones.*/

SELECT customer.customer_id, customer.first_name, AVG(payment.amount)
FROM customer, payment WHERE payment.customer_id = customer.customer_id
GROUP BY customer.customer_id
HAVING COUNT(payment.amount)<25 AND SUM(payment.amount) >100


/*Obtener los 5 nombres de actor más repetidos (aprox).*/

SELECT actor.first_name, COUNT(actor.first_name )
FROM film, actor, film_actor WHERE film.film_id = film_actor.film_id
AND actor.actor_id = film_actor.actor_id
GROUP BY actor.first_name LIMIT 5 OFFSET 0

/*Para felicitar el año nuevo chino se necesita el listado con los datos postales de los clientes residentes en China y Taiwan*/

SELECT customer.customer_id, customer.first_name, customer.last_name, address.district, address.city_id, address.postal_code, address.address, address.address2, country.country
FROM customer, country, city, address  WHERE customer.customer_id = address.address_id
AND address.address_id = city.city_id AND city.city_id = country.country_id
AND country.country REGEXP 'Taiwan|China'

/*Mostrar los datos de las tiendas, conocidas por la ciudad y país donde están ubicadas, indicando el nombre del gerente, el numero de películas en inventario, el numero de títulos diferentes y el número de clientes atendidos.*/

SELECT ci.city, cou.country, st.store_id, s.first_name, COUNT(inv.film_id) films_invent,
	COUNT(DISTINCT inv.film_id) films_unique

FROM store st
INNER JOIN inventory inv ON inv.store_id = st.store_id
INNER JOIN address a ON a.address_id = st.address_id
INNER JOIN city ci ON ci.city_id = a.city_id
INNER JOIN country cou ON cou.country_id = ci.country_id
INNER JOIN staff s ON s.staff_id = st.manager_staff_id

GROUP BY st.store_id


/*En curso:
Obtener el listado detallado de alquileres indicando el identificador de alquiler, el titulo alquilado, las fechas de alquiler, devolución y tiempo transcurrido, nombres del cliente (nombre con apellidos), empleado (nombre con apellidos) y tienda (ciudad, país).*/

SELECT rent.rental_id, f.title, rent.rental_date, rent.return_date, 
		DATEDIFF(rent.return_date, rent.rental_date) time_passed,  
		CONCAT (c.first_name, ' ', c.last_name) customer_name,
		CONCAT (UPPER(s.first_name), ' ', UPPER(s.last_name)) staff_name,
		UPPER(cit.city), UPPER(COUNT.country)
		
FROM rental rent
INNER JOIN inventory inv ON inv.inventory_id = rent.inventory_id 
INNER JOIN film f ON inv.film_id = f.film_id
INNER JOIN customer c ON rent.customer_id = c.customer_id
INNER JOIN staff s ON s.staff_id = rent.staff_id
INNER JOIN store st ON s.store_id =  st.store_id
INNER JOIN address a ON st.address_id = a.address_id
INNER JOIN city cit ON cit.city_id = a.city_id
INNER JOIN country COUNT ON cit.country_id = COUNT.country_id



/*Generar la lista diaria de alquileres vencidos no devueltos para poder llamar a los clientes y pedirles que los devuelvan, para ello debe mostrar las fechas de alquiler y vencimiento, el teléfono y nombre del cliente, así como el titulo de la película, priorizando los que mas tiempo llevan vencidos.*/

SELECT r.rental_date, r.return_date, DATEDIFF(NOW(), r.rental_date) time_passed,
		a.phone, c.first_name, f.title
FROM rental r
INNER JOIN customer c ON	c.customer_id = r.customer_id
INNER JOIN inventory inv ON inv.inventory_id = r.inventory_id
INNER JOIN film f ON f.film_id = inv.film_id
INNER JOIN address a ON c.address_id = a.address_id
WHERE r.return_date IS NULL
ORDER BY time_passed DESC

/*Elaborar el ranking de los países que más alquilan las películas de GINA DEGENERES.*/

SELECT cou.country, COUNT(r.rental_id) AS rental_count

FROM rental r
INNER JOIN customer c ON r.customer_id = c.customer_id
INNER JOIN address a ON  c.address_id = a.address_id
INNER JOIN city ci ON a.city_id = ci.city_id
INNER JOIN country cou ON ci.country_id = cou.country_id
INNER JOIN inventory i ON r.inventory_id = i.inventory_id
INNER JOIN film_actor fa ON i.film_id = fa.film_id
INNER JOIN actor ac ON fa.actor_id = ac.actor_id
WHERE ac.first_name = 'GINA' AND ac.last_name = 'DEGENERES'
GROUP BY cou.country
ORDER BY rental_count DESC






















